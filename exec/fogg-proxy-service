#!/usr/bin/env bash

function init_service {
  local pth_service="${nm_service/-/\/}"
  pth_service="${pth_service/-/\/}"
  set +f
  eval cd "${_org_home}/*/${pth_service}"
  set -f
  "$@"
}

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "$shome/script/profile"
  source normalize

  local nm_service="${0##*/}"

  case "${1:-}" in
    list)
      shift
      if [[ "$#" -gt 0 ]]; then
        init_service deploy "$@" --list-hosts -e deploy_role=nothing
      fi
      ;;
    deploy|run)
      local nm_cmd="$1"; shift
      init_service "$nm_cmd" "$@"
      ;;
    init|plan|apply|blue|live|green|staging)
      "$0" fogg "$@"
      ;;
    refresh)
      "$0" terraform "$@"
      ;;
    git|make|fogg|terraform|vagrant|block)
      init_service "$@"
      ;;
    ecs)
      shift
      if [[ "$#" == 0 ]]; then
        local tmp_ecs="$(mktemp -d -t XXXXXX)"
        "$0" ecs describe-clusters > "$tmp_ecs/ds" &
        "$0" ecs list-container-instances > "$tmp_ecs/lci" &
        "$0" ecs list-task-definitions > "$tmp_ecs/ltd" &
        "$0" ecs list-tasks > "$tmp_ecs/lt" &
        "$0" ecs list-services > "$tmp_ecs/ls" &
        wait
        cat "$tmp_ecs/ds" "$tmp_ecs/lci" "$tmp_ecs/ltd" "$tmp_ecs/lt" "$tmp_ecs/ls"
        rm -rf "$tmp_ecs"
      else
        "$0" fogg ecs "$@"
      fi
      ;;
    "")
      figlet terraform
      "$0" terraform output
      ;;
    *)
      echo "ERROR: unknown sub-command: $*" 1>&2
      false
      ;;
  esac
}

source sub "$BASH_SOURCE" "$@"
