#!/usr/bin/env bash

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "$shome/script/profile"
  source normalize

  if [[ "$#" -gt 0 ]]; then
    echo "ERROR: this command doesn't take arguments" 1>&2
    return 1
  fi

  local pth_config="$(cat .fogg-name | tr '/' '_')"
  local nm_module="$(cat .fogg-module 2>/dev/null || true)"

  if [[ -z "$nm_module" ]]; then
    case "$pth_config" in
      *_*_*_*) nm_module=service ;;
        *_*_*) nm_module=app ;;
          *_*) nm_module=env ;;
            *) nm_module=org ;;
    esac
  fi

  case "$nm_module" in
    instance|asg_instances|in_service)
      set -- "$nm_module" \
        "$(echo "$pth_config" | cut -d_ -f2)" \
        "$(echo "$pth_config" | cut -d_ -f3)" \
        "$(echo "$pth_config" | cut -d_ -f4)" \
        "${pth_config##*_}"
      ;;
    service)
      set -- "$nm_module" \
        "$(echo "$pth_config" | cut -d_ -f2)" \
        "$(echo "$pth_config" | cut -d_ -f3)" \
        "${pth_config##*_}"
      ;;
    app)
      set -- "$nm_module" \
        "$(echo "$pth_config" | cut -d_ -f2)" \
        "${pth_config##*_}"
      ;;
    org)
      set -- "$nm_module"
      ;;
    *)
      set -- "$nm_module" \
        "${pth_config##*_}"
      ;;
  esac
  
  fogg gen "$@"
}

source sub "$BASH_SOURCE" "$@"
